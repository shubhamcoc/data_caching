// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"cache/models"
)

// PostWriteOKCode is the HTTP code returned for type PostWriteOK
const PostWriteOKCode int = 200

/*PostWriteOK data inserted

swagger:response postWriteOK
*/
type PostWriteOK struct {

	/*
	  In: Body
	*/
	Payload models.Validstringresponse `json:"body,omitempty"`
}

// NewPostWriteOK creates PostWriteOK with default headers values
func NewPostWriteOK() *PostWriteOK {

	return &PostWriteOK{}
}

// WithPayload adds the payload to the post write o k response
func (o *PostWriteOK) WithPayload(payload models.Validstringresponse) *PostWriteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post write o k response
func (o *PostWriteOK) SetPayload(payload models.Validstringresponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWriteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostWriteBadRequestCode is the HTTP code returned for type PostWriteBadRequest
const PostWriteBadRequestCode int = 400

/*PostWriteBadRequest The specified key, value pair is invalid (requires strings)

swagger:response postWriteBadRequest
*/
type PostWriteBadRequest struct {
}

// NewPostWriteBadRequest creates PostWriteBadRequest with default headers values
func NewPostWriteBadRequest() *PostWriteBadRequest {

	return &PostWriteBadRequest{}
}

// WriteResponse to the client
func (o *PostWriteBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// PostWriteMethodNotAllowedCode is the HTTP code returned for type PostWriteMethodNotAllowed
const PostWriteMethodNotAllowedCode int = 405

/*PostWriteMethodNotAllowed Method not allowed

swagger:response postWriteMethodNotAllowed
*/
type PostWriteMethodNotAllowed struct {
}

// NewPostWriteMethodNotAllowed creates PostWriteMethodNotAllowed with default headers values
func NewPostWriteMethodNotAllowed() *PostWriteMethodNotAllowed {

	return &PostWriteMethodNotAllowed{}
}

// WriteResponse to the client
func (o *PostWriteMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(405)
}
