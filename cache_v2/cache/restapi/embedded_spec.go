// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "EM cache interface APIs",
    "title": "Cache APIs",
    "version": "1.1.0"
  },
  "paths": {
    "/get": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Return the query result",
        "parameters": [
          {
            "type": "string",
            "name": "employee_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "return employee name",
            "schema": {
              "$ref": "#/definitions/record"
            }
          },
          "400": {
            "description": "Key not found"
          },
          "405": {
            "description": "Method not allowed"
          }
        }
      }
    },
    "/search": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Return 10 data to the backend",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response with 10 key value pair",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/record"
              }
            }
          },
          "400": {
            "description": "The specified offset is not valid"
          },
          "405": {
            "description": "Method not allowed"
          }
        }
      }
    },
    "/write": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Save data in cache",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/record"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "data inserted",
            "schema": {
              "$ref": "#/definitions/validstringresponse"
            }
          },
          "400": {
            "description": "The specified key, value pair is invalid (requires strings)"
          },
          "405": {
            "description": "Method not allowed"
          }
        }
      }
    }
  },
  "definitions": {
    "offset": {
      "type": "object",
      "required": [
        "key",
        "start",
        "stop"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "start": {
          "type": "string"
        },
        "stop": {
          "type": "string"
        }
      }
    },
    "record": {
      "type": "object",
      "required": [
        "employee_id",
        "employee_name"
      ],
      "properties": {
        "employee_id": {
          "type": "string"
        },
        "employee_name": {
          "type": "string"
        }
      }
    },
    "validstringresponse": {
      "type": "string"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "EM cache interface APIs",
    "title": "Cache APIs",
    "version": "1.1.0"
  },
  "paths": {
    "/get": {
      "get": {
        "produces": [
          "application/json"
        ],
        "summary": "Return the query result",
        "parameters": [
          {
            "type": "string",
            "name": "employee_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "return employee name",
            "schema": {
              "$ref": "#/definitions/record"
            }
          },
          "400": {
            "description": "Key not found"
          },
          "405": {
            "description": "Method not allowed"
          }
        }
      }
    },
    "/search": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Return 10 data to the backend",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response with 10 key value pair",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/record"
              }
            }
          },
          "400": {
            "description": "The specified offset is not valid"
          },
          "405": {
            "description": "Method not allowed"
          }
        }
      }
    },
    "/write": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Save data in cache",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/record"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "data inserted",
            "schema": {
              "$ref": "#/definitions/validstringresponse"
            }
          },
          "400": {
            "description": "The specified key, value pair is invalid (requires strings)"
          },
          "405": {
            "description": "Method not allowed"
          }
        }
      }
    }
  },
  "definitions": {
    "offset": {
      "type": "object",
      "required": [
        "key",
        "start",
        "stop"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "start": {
          "type": "string"
        },
        "stop": {
          "type": "string"
        }
      }
    },
    "record": {
      "type": "object",
      "required": [
        "employee_id",
        "employee_name"
      ],
      "properties": {
        "employee_id": {
          "type": "string"
        },
        "employee_name": {
          "type": "string"
        }
      }
    },
    "validstringresponse": {
      "type": "string"
    }
  }
}`))
}
